{"ast":null,"code":"var _jsxFileName = \"/home/student/Desktop/dev/React/react-tic-tac-toe-app/src/components/Game.js\";\nimport React, { useState } from 'react';\nimport Board from './Board';\nimport { calculateWinner } from '../helpers';\nconst styles = {\n  width: '200px',\n  margin: '20px auto'\n};\n\nconst Game = () => {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXisNext] = useState(true);\n  const winner = calculateWinner(board);\n\n  const handleClick = i => {\n    const boardCopy = [...board];\n    if (winner || boardCopy[i]) return;\n    boardCopy[i] = xIsNext ? 'X' : 'O';\n    setBoard(boardCopy);\n    setXisNext(!xIsNext);\n  };\n\n  const renderMoves = () => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setBoard(Array(9).fill(null)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }\n    }, \"Start Game\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Board, {\n    squares: board,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, winner ? 'Winner: ' + winner : 'Next Player: ' + (xIsNext ? 'X' : 'O')), renderMoves())));\n};\n\nexport default Game;","map":{"version":3,"sources":["/home/student/Desktop/dev/React/react-tic-tac-toe-app/src/components/Game.js"],"names":["React","useState","Board","calculateWinner","styles","width","margin","Game","board","setBoard","Array","fill","xIsNext","setXisNext","winner","handleClick","i","boardCopy","renderMoves"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,eAAT,QAAgC,YAAhC;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE,OADI;AAEXC,EAAAA,MAAM,EAAE;AAFG,CAAf;;AAKA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACS,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMa,MAAM,GAAGX,eAAe,CAACK,KAAD,CAA9B;;AAEA,QAAMO,WAAW,GAAGC,CAAC,IAAG;AACpB,UAAMC,SAAS,GAAG,CAAC,GAAGT,KAAJ,CAAlB;AACA,QAAGM,MAAM,IAAIG,SAAS,CAACD,CAAD,CAAtB,EAA2B;AAC3BC,IAAAA,SAAS,CAACD,CAAD,CAAT,GAAeJ,OAAO,GAAG,GAAH,GAAS,GAA/B;AACAH,IAAAA,QAAQ,CAACQ,SAAD,CAAR;AACAJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAND;;AAQA,QAAMM,WAAW,GAAG,MAAM;AACtB,wBAAO;AAAQ,MAAA,OAAO,EAAI,MAAMT,QAAQ,CAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAGH,GAJD;;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,uDACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEH,KAAhB;AAAuB,IAAA,OAAO,EAAIO,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,KAAK,EAAEX,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIU,MAAM,GAAG,aAAWA,MAAd,GAAuB,mBAAmBF,OAAO,GAAG,GAAH,GAAS,GAAnC,CAAjC,CADJ,EAEKM,WAAW,EAFhB,CAFJ,CADJ,CADJ;AAWH,CAhCD;;AAkCA,eAAeX,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport Board from './Board'\nimport { calculateWinner } from '../helpers'\n\nconst styles = {\n    width: '200px',\n    margin: '20px auto',\n};\n\nconst Game = () => {  \n    const [board, setBoard] = useState(Array(9).fill(null))\n    const [xIsNext, setXisNext] = useState(true)\n    const winner = calculateWinner(board)\n\n    const handleClick = i =>{\n        const boardCopy = [...board]\n        if(winner || boardCopy[i]) return;\n        boardCopy[i] = xIsNext ? 'X' : 'O';\n        setBoard(boardCopy)\n        setXisNext(!xIsNext)\n    }\n    \n    const renderMoves = () => {\n        return <button onClick = {() => setBoard(Array(9).fill(null))}>\n            Start Game\n        </button>\n    }\n\n\n\n    return (\n        <div>\n            <>\n                <Board squares={board} onClick = {handleClick} />\n                <div style={styles}>\n                    <p>{winner ? 'Winner: '+winner : 'Next Player: ' + (xIsNext ? 'X' : 'O')}</p>\n                    {renderMoves()}\n                </div>\n            </>\n        </div>\n    )\n}\n\nexport default Game\n"]},"metadata":{},"sourceType":"module"}